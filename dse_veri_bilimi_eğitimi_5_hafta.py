# -*- coding: utf-8 -*-
"""DSE_Veri_Bilimi_Eğitimi_5_Hafta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gu-mAo_jlZHD3ETdbm8CGjIHY9z-mFdr

## Fonksiyonlar
"""

public int Topla(int sayi1,int sayi2){
    
}

public void Karsilama(){
    jhdlksjhd
    jsdhgfjlgdsf
    şkjdhfkdsf
}

kslhjdkhdfd

def Karsilama():
  isim = input("İsminizi Girin: ")
  print(f"Merhaba {isim}.")

def Topla(sayi1, sayi2):
  toplam=sayi1+sayi2
  return toplam

a=5
print(a)

def Matematik(sayi1, sayi2):
  toplam = sayi1+sayi2
  fark = sayi1-sayi2
  carpim = sayi1*sayi2
  bolum = sayi1/sayi2
  
  return (toplam,carpim,fark,bolum)

t, c, f, b = Matematik(15,10)
print(t)
print(c)
print(f)
print(b)

def Matematik2(sayi1, sayi2):
  toplam = sayi1+sayi2
  fark = sayi1-sayi2
  carpim = sayi1*sayi2
  bolum = sayi1/sayi2
  
  return {"Toplam":toplam,"Carpim":carpim,"Fark":fark,"Bolum":bolum}

Matematik2(15,10) -> dictionary.values()

t,c,f,b = Matematik2(15,10)

print(t)
print(c)
print(f)
print(b)
"""
for eleman in d.items():
  print(f"{eleman[0]} = {eleman[1]}")
"""

toplamSayi = Topla(1,2)

toplamSayi = Topla(5,2)
print(toplamSayi)

Karsilama()



lgsaljhgdsf
jksadljkashd
lajsdghljasd
ljasghdhljsad

Karsilama()

sahjgdlajhsgd
ljasghdljagsfdljsa
lkjsadfljksdhf
lkjadshflhjkdsaf
şkjjdsakhf

Karsilama()


çsdkgflhjsdgflhjdsgfjdas
lksadhfljdshafjlhsdaf
şksdajhfljdshfjlkdsaf
şkjdsahfldshfds
ljdsgafdsgfljsgdf

Karsilama()



def merhaba():
  # { -> : 
  print("Herkese Merhaba!!")

merhaba()   #fonksiyonu çağırma   #parametre almayan fonksiyonlar

def merhaba(isim):
  print("Merhaba " + isim)

merhaba("Fethi")

def func1():
  print("Hello World!!")

def toplam(a,b):
  print(a+b)

toplam(6,7)

t = toplam(8,9)
print(t)

#iki sayı toplam çarpım
def func(x,y):
  toplam = x + y
  carpim = x * y
  return (toplam,carpim)

t,c = func(23,45)

print(t,c)

print("Değerlerin toplamı: " + str(t) + ", Değerlerin çarpımı: " + str(c))

def SayiFiltrele(filtrelenecekSayi):
  sayiListesi = [2,8,9]

  if filtrelenecekSayi in sayiListesi:
    print("HATA!")
  else:
    print("SAYI UYGUN!")

SayiFiltrele(7)

SayiFiltrele(2)

SayiFiltrele(12)

def Faktoriyel(sayi):
  carpim = 1
  for i in range(1,sayi+1):
    carpim *= i
  return carpim

#Recursive ile Faktöriyel Hesaplama

def FaktoriyelR(sayi):

  if sayi <=1:
    return 1

  return sayi*FaktoriyelR(sayi-1)


FaktoriyelR(5)  =>  5 * 24 = 120

FaktoriyelR(4) =>  4 * 6

FaktoriyelR(3) => 3 * 2

FaktoriyelR(2) => 2 * 1

FaktoriyelR(1) => 1

FaktoriyelR(5)

# Bir fonksiyon yazalım, girilen sayının karesini alsın ama 5 rakamı girince de sonlandırsın ve bize hata mesajı versin.
def kare(x):
  if x == 5:
    return "5 girdiğiniz için fonksiyon sonlandırıldı"

  sonuc = x **2
  return sonuc

kare(10)

kare(5)

d = kare(5)
print(d)

# girilen sayının pozitif negatif ya da sıfır olduğunu söyleyen bir fonksiyon yazalım.



def func(x):
  if x > 0:
    return ("Pozitif")
  elif x < 0:
    return ("Negatif")
  else:
    return ("Sıfır")

for i in [-2,5,6,0,-4,-7]:
  print(func(i))

# faktöriyel hesabı yapan fonksiyonu yazalım.



def faktoriyel(sayi):
  faktoriyel = 1
  if (sayi == 0 or sayi == 1):
    print("Faktoriyel: ", faktoriyel)
  else:
    while (sayi >= 1):
      faktoriyel *= sayi
      sayi -= 1
    print("Faktoriyel: ", faktoriyel)

faktoriyel(5)

#for ile yazalım

def faktoriyel2(sayi):
  faktoriyel = 1
  if (sayi == 0 or sayi == 1):
    print("Faktoriyel: ", faktoriyel)
  else:
    for i in range(faktoriyel, sayi+1):
       faktoriyel *= i      
    print("Faktoriyel: ", faktoriyel)

faktoriyel2(6)

x = faktoriyel2(6)
print(x)

def faktoriyel3(sayi):
  faktoriyel = 1
  if (sayi == 0 or sayi == 1):
    return ("Faktoriyel: ", faktoriyel)
  else:
    for i in range(faktoriyel, sayi+1):
       faktoriyel *= i      
    return ("Faktoriyel: ", faktoriyel)

x = faktoriyel3(6)
print(x)

# positional arguments
# keyword arguments

def Karsilama(isim,soyisim):
  print(f"Hello {isim} {soyisim}")

Karsilama(soyisim="Tekyaygil",isim="Fethi")

def Karsilama2(isim,soyisim,isSoyisimBuyuk=False):
  if isSoyisimBuyuk:
    soyisim = soyisim.upper()
  
  print(f"Hello {isim} {soyisim}")

Karsilama2("Fethi","Tekyaygil")

# boolean değişkenli bir büyük harf küçük harf çıktısı veren fonksiyon yazalım.

def merhaba2(isim, buyukHarf = False):
  if buyukHarf:
    print("Merhaba " + isim.upper())
  else:
    print("Merhaba " + isim)

merhaba2("Fethi",False)

merhaba2("Fethi", buyukHarf = True)

Topla(1,2)

Topla(1,2,3,4)

# kwargs => keyword arguments
# args => positional arguments

def Topla(*args):
  print(sum(args))

Topla(1,2,3,4,5,6,7)

Topla(1,2,3,4)

def Topla2(**kwargs):
  print(kwargs)
  print(type(kwargs))

  print(sum(list(kwargs.values())))

Topla2(sayi1=7,sayi2=21,sayi3=98,sayi4=102)

def carp(*args):
  sonuc = 1
  for i in args:
    sonuc *= i
  print(sonuc)

# *args ifade demet tipli veri tutar.
(1,2,3,4,5) #tuple

carp(4,5,6,7,8)

carp(2,3,4,5)

#maaş hesabını fonksiyon olarak yazalım.


def maashesabi(maas):

  if maas < 0:
    return("Geçersiz değer")
  else:

    if 0 < maas <= 1000:
      maas = maas + maas * 0.15
    elif maas <= 2000:
      maas = maas + maas * 0.1
    elif maas <= 3000:
      maas = maas + maas * 0.05
    else:
      maas = maas + maas * 0.025

    return ("Yeni maaşınız", maas)

maashesabi(-5)

#maaşı kullanıcıdan isteyen fonksiyon olarak tekrar yazalım.


def maashesabi2():

  maas = float(input("Lütfen maaşınızı giriniz: "))

  if maas < 0:
    return("Geçersiz değer")
  else:
    if 0 < maas <= 1000:
      maas = maas + maas * 0.15
    elif maas <= 2000:
      maas = maas + maas * 0.1
    elif maas <= 3000:
      maas = maas + maas * 0.05
    else:
      maas = maas + maas * 0.025

    return ("Yeni maaşınız", maas)

yeni_maasim = maashesabi2() 
print(yeni_maasim)

isim = "Fethi"
print(f"Hello {isim}")

"""## Methodlar


Methodlar fonksiyonlar gibidir fakat çağrılma olayı bir nesne(object) üzerinden yapılır.

"""

s = input("Bir isim giriniz: ")

upper = s.capitalize()

print(upper)

#verilen bir listedeki en büyük değere sahip elemanın indexini döndürsün.

myList = [45,7,23,6,12,78]

maxElement = max(myList)

maxIndex = myList.index(maxElement)

print(maxIndex)

"""# Global & Yerel Değişkenler"""

isim = "Fethi"

def Func():
  global isim
  isim = "Taha"

Func()
print(isim)

x = 5

print(x)

def yazdir():
  x = 4
  return(x)

yazdir()

print(x)

"""# Modüller

import numpy

import tensorflow as tf

import myModules

myModules.myFunc()

from myModules import *

myFunc()
"""

import random as rnd

rnd.randint(0,10)

kelimeler = ["yapay","zeka","makine","öğrenimi","python","programlama"]

#from random import *
import random as rnd


def randomWord(kelimeler):
  index = rnd.randint(0, len(kelimeler)-1)
  return kelimeler[index]

kelime = randomWord(kelimeler)
print(kelime)

"""# Generatorlar"""

def fonksiyon(sayi):
  l=[1,2,3]
  for item in l:
    yield sayi**item #-> 3   9   27

result = fonksiyon(3)
list(result)

def func(a):
  yield a+2
  yield a-2
  yield a*2
  yield a/2

sonuc=func(2)
print(type(sonuc))
print(sonuc)
print(list(sonuc))







liste=[(24,"Fethi"),(12,"Taha"),(23,"Enes"),(23,"Yaren"),(24,"Seran")]

d = {k:v for k,v in liste if k>20}
d

(24,"Fethi"),(23,"Enes"),(23,"Yaren"),(24,"Seran")

